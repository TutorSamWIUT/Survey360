version: '3.8'

services:
  db:
    image: postgres:15
    container_name: survey360_db_prod
    restart: always
    environment:
      POSTGRES_DB: survey360_production
      POSTGRES_USER: survey360_user-production
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
      - ./backups:/backups
    networks:
      - survey360_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U survey360_user-production -d survey360_production"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: 
      context: .
      dockerfile: Dockerfile.prod
    container_name: survey360_web_prod
    restart: always
    env_file:
      - .env.production
    volumes:
      - static_volume_prod:/app/staticfiles
      - media_volume_prod:/app/media
      - ./logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
    networks:
      - survey360_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/admin/"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: survey360_nginx_prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - static_volume_prod:/var/www/static:ro
      - media_volume_prod:/var/www/media:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - web
    networks:
      - survey360_network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Database backup service
  backup:
    image: postgres:15
    container_name: survey360_backup
    restart: "no"
    environment:
      PGPASSWORD: ${DB_PASSWORD}
    volumes:
      - ./backups:/backups
      - ./scripts/backup.sh:/backup.sh:ro
    networks:
      - survey360_network
    depends_on:
      - db
    entrypoint: /backup.sh
    profiles:
      - backup

volumes:
  postgres_data_prod:
  static_volume_prod:
  media_volume_prod:

networks:
  survey360_network:
    driver: bridge